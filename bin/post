#!/usr/bin/env python
from __future__ import print_function

import argparse
import unicodedata
import re
from datetime import date

today = date.today().strftime("%Y-%m-%d")

def slugify(value):
    """
    https://github.com/django/django/blob/8f04f53dd847896f49a9bc367bb7269984ebdb6e/django/utils/text.py#L415
    Converts to lowercase, removes non-word characters (alphanumerics and
    underscores) and converts spaces to hyphens. Also strips leading and
    trailing whitespace.
    """
    value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')
    value = re.sub('[^\w\s-]', '', value).strip().lower()
    value = re.sub(r'\bthe\b', '', re.sub(r'\ba\b', '', re.sub(r'\ban\b', '', value)))
    return re.sub('[-\s]+', '-', value)

def parse_args():
    parser = argparse.ArgumentParser(description="create a new jekyll/gh-pages blog post")
    parser.add_argument("title", help="the title of the post (will get slugified)", nargs='+')

    parser.add_argument("-d", "--date", help="date of the post (default %s)" % today, default=today)
    parser.add_argument("-t", "--tags", action='append', help="tags for the post (default: none)")

    parser.add_argument("--draft", action="store_true", help="start a draft, not a post")
    parser.add_argument("--unpublished", action="store_true", help="start a post, but do not publish it")

    return parser.parse_args()


if __name__ == "__main__":
    import os.path

    args = parse_args()

    title = u' '.join(t.decode('utf8') for t in args.title)

    file_path = ("_posts", "%s-{}.md" % args.date) if not args.draft else ("_drafts", "{}.md")
    file_location = os.path.join(file_path[0], file_path[1].format(slugify(title)))

    tags = u'\n'.join(u"- %s" % slugify(tag.decode('utf8')) for tag in args.tags) if args.tags else ''
    tags = u'\ntags:\n' + tags if tags else ''
    published = u"\npublished: false" if args.unpublished else ''


    file_content = u"""---
layout: post{published}
title: {title}{tags}
---
""".format(**locals())

    with open(file_location, 'w') as fh:
        print(file_content.encode('utf8'), file=fh)

    print("open %s" % file_location)
